{
  "title": "Architectural Pattern Form",
  "sub_title": "Provide the input for the Architectural Pattern component",
  "fields": {
    "appDomain": {
      "label": "Please choose the domain of your application",
      "formType": "radio",
      "options": [
        {
          "id": "Q1_1",
          "text": "Web-based systems"
        },
        {
          "id": "Q1_2",
          "text": "Web services"
        },
        {
          "id": "Q1_3",
          "text": "Service-based systems"
        },
        {
          "id": "Q1_4",
          "text": "Distributed systems"
        },
        {
          "id": "Q1_5",
          "text": "Cloud computing applications"
        },
        {
          "id": "Q1_6",
          "text": "Mobile applications"
        },
        {
          "id": "Q1_7",
          "text": "Compiler design"
        },
        {
          "id": "Q1_8",
          "text": "Case and related developer tools"
        },
        {
          "id": "Q1_9",
          "text": "Database systems"
        },
        {
          "id": "Q1_10",
          "text": "Context-aware systems"
        },
        {
          "id": "Q1_11",
          "text": "Adaptable systems"
        },
        {
          "id": "Q1_12",
          "text": "Enterprise application integration"
        },
        {
          "id": "Q1_13",
          "text": "Customer relationship management"
        },
        {
          "id": "Q1_14",
          "text": "Information management and decision support system"
        },
        {
          "id": "Q1_15",
          "text": "Transaction processing"
        },
        {
          "id": "Q1_16",
          "text": "None of the above"
        }
      ]
    },
    "appType": {
      "label": "Please choose the type of your application",
      "formType": "radio",
      "options": [
        {
          "id": "Q2_1",
          "text": "Web application / website with small components"
        },
        {
          "id": "Q2_2",
          "text": "Large scale web application like e-commerce or social website development"
        },
        {
          "id": "Q2_3",
          "text": "General desktop application"
        },
        {
          "id": "Q2_4",
          "text": "Application with a simply business logic that does not need to scale out"
        },
        {
          "id": "Q2_5",
          "text": "Enterprise or business application with traditional IT departments and processes"
        },
        {
          "id": "Q2_6",
          "text": "Application with a fixed set of core functionalities and a dynamic set of functionalities that need frequent updates"
        },
        {
          "id": "Q2_7",
          "text": "Large, complex, enterprise-wide systems that require integration with many heterogeneous applications and services"
        },
        {
          "id": "Q2_8",
          "text": "Application with many shared components, particularly components across the enterprise"
        },
        {
          "id": "Q2_9",
          "text": "Application with immense and rapidly growing data systems"
        },
        {
          "id": "Q2_10",
          "text": "Application with different platforms"
        },
		{
          "id": "Q2_11",
          "text": "Application that requires strict standards of testability"
        },
        {
          "id": "Q2_12",
          "text": "None of the above"
        }
      ]
    },
    "nonFunctionalReqs": {
      "label": "Please choose the most relevant non-functional requirements for your application",
      "formType": "checkbox",
      "options": [
        {
          "id": "Q3_1",
          "text": "Maintainability (how easy the software system can be modified to correct faults, improve performance, or other attributes, or adapt to a changed environment)"
        },
        {
          "id": "Q3_2",
          "text": "Performance (amount of work accomplished by a system and the limiting factor in the end-usability of the system)"
        },
        {
          "id": "Q3_3",
          "text": "Portability (the degree in which the same architecture can be used in different environments)"
        },
        {
          "id": "Q3_4",
          "text": "Reliability (consistency in the anticipation of software operations - e.g., in terms of the number of software faults (bugs), expressed as faults per thousand lines of code)"
        },
        {
          "id": "Q3_5",
          "text": "Security (the ability to control who can perform what actions on particular resources)"
        }
      ]
    },
    "appFeatures": {
      "label": "Please choose the desired features of your application for development and deployment",
      "formType": "checkbox",
      "options": [
        {
          "id": "Q4_1",
          "text": "High ease of development / quick development with fewer developers"
        },
        {
          "id": "Q4_2",
          "text": "Easy rewriting and updating parts of the application"
        },
        {
          "id": "Q4_3",
          "text": "Development teams that are spread out"
        },
        {
          "id": "Q4_4",
          "text": "Adding special functionality, modules or extensions without modifying the original application"
        },
        {
          "id": "Q4_5",
          "text": "High ease of deployment"
        },
        {
          "id": "Q4_6",
          "text": "Rapid, frequent and independent deployment"
        },
        {
          "id": "Q4_7",
          "text": "Quick response to a constantly changing environment"
        },
        {
          "id": "Q4_8",
          "text": "Reusability of integrations and component sharing"
        }
      ]
    },
    "architecturalFeatures": {
      "label": "Please choose the desired features of your architecture",
      "formType": "checkbox",
      "options": [
        {
          "id": "Q5_1",
          "text": "Asynchronous communication / data flow (interaction between components without strict requirement for immediate or synchronized responses)"
        },
        {
          "id": "Q5_2",
          "text": "Synchronous communication / data flow (information can only be exchanged in real time)"
        },
        {
          "id": "Q5_3",
          "text": "Loose coupling (degree of dependency between components is very low)"
        },
        {
          "id": "Q5_4",
          "text": "Independent services (services can be developed and deployed independently of one another)"
        },
        {
          "id": "Q5_5",
          "text": "Separation of concerns (separating an application into distinct sections each of which address a separate concern)"
        },
        {
          "id": "Q5_6",
          "text": "Plug-in components (adding additional feature as plugins to the core application)"
        },
        {
          "id": "Q5_7",
          "text": "Dynamic composition (system components and connections can be created and destroyed during runtime)"
        },
        {
          "id": "Q5_8",
          "text": "High volume data (size of datasets to be processed are larger than terabytes)"
        }
      ]
    }
  }
}